// Generated by CoffeeScript 1.9.1
module.exports = {
  every: function(arr, testFn) {
    var i, item, j, len;
    for (i = j = 0, len = arr.length; j < len; i = ++j) {
      item = arr[i];
      if (!testFn(item, i)) {
        return false;
      }
    }
    return true;
  },
  any: function(arr, testFn) {
    var i, item, j, len;
    for (i = j = 0, len = arr.length; j < len; i = ++j) {
      item = arr[i];
      if (testFn(item, i)) {
        return true;
      }
    }
    return false;
  },
  unique: function(me, compareFn) {
    var j, k, key, len, len1, out, results, val, value;
    out = {};
    if (compareFn != null) {
      for (j = 0, len = me.length; j < len; j++) {
        val = me[j];
        val = compareFn(val);
        out[val] = val;
      }
    } else {
      for (k = 0, len1 = me.length; k < len1; k++) {
        val = me[k];
        out[val] = val;
      }
    }
    results = [];
    for (key in out) {
      value = out[key];
      results.push(value);
    }
    return results;
  },
  isNumber: function(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  },
  isInt: function(value) {
    return !isNaN(parseInt(value, 10)) && (parseFloat(value, 10) === parseInt(value, 10));
  }
};
